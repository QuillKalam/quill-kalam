datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                    String       @id @default(uuid())
  email                 String       @unique
  password              String?
  firstName             String?
  lastName              String?
  isEmailVerified       Boolean      @default(false)
  verificationToken     String?
  resetPasswordToken    String?      @unique
  resetPasswordExpires  DateTime?
  createdAt             DateTime     @default(now())
  updatedAt             DateTime     @updatedAt
  roles                 Role[]       @relation("UserRoles")
  oauthProviders        OAuthLink[]
  refreshTokens         RefreshToken[]
}

model Role {
  id          String    @id @default(uuid())
  name        String    @unique
  slug        String    @unique  @map("slug")
  description String?
  permissions Json?
  users       User[]    @relation("UserRoles")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model OAuthLink {
  id           String   @id @default(uuid())
  provider     String   // 'google', 'facebook', etc.
  providerId   String   // User ID from the provider
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([provider, providerId])
  @@unique([provider, userId])
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
  
  @@index([userId])
}